/*****************************************************************//**
 * \file   inoutput.h
 * \brief  Заголовочный файл к модулю реализующему ввод и вывод изображений.
 * \author Преучиль Н.А.
 * \date   12 January 2021
 *********************************************************************/

#pragma once
#include "Global.h"

 /**
 * \struct InputResult "inoutput.h"
 * \brief Результаты ввода в программу.
 * \details Переменная структуры будет содержать основные аргументы возвращаемые функциями ввода, заключёнными в FullInputFunc.
 */
struct InputResult {
	QueueElement* ptr_QueueArr;									///<  \brief Указатель на очередь введённых команд (Массив переменных QueueElement).
																///<  \details Последовательнось команд соответствует очереди введения.
	Pic* ptr_Pics;												///<  Указатель на массив введённых изображений (Массив переменных Pic).
	int PicsCount;												///<  Количество введённых изображений.
	int CommCount;												///<  Количество введённых команд.
};

/**
 * \brief Обработка файла "command.txt".
 * \details Функция считывает содержимое файла "command.txt", создаёт и записывает в память указатель на очередь команд,
 * а так же количество введённых команд и изображений.
 * \details Требования и органичения:
 * - Количество команд не привышает 100;
 * \param InputResult* out - указатель на структуру с результатами вывода, в которую и будут сохраняться результаты
 * работы данной подпрограммы.
 * \return void.
 */
void InputCommands(InputResult* out);

/**
 * \brief Парсер строки.
 * \details Функция преобразует строку вида "1,2,3,4" из файла "command.txt" в массив чисел.
 * \param char* ptr_WrongStr - указатель на строку неправильного формата.
 * \param char* ptr_ResultArr - указатель на массив чисел для заполнения.
 * \return Функция возвращает количество элементов, записанных в массив чисел.
 */
int TransformNums(char* ptr_WrongStr, int* ptr_ResultArr);

/**
 * \brief Генератор имён файлов.
 * \details Функция генерирует имена файлов для ввода/вывода и открывает файл.
 * \details Функция имеет 2 режима работы:
 * - 'i' - создание имени формата "inputxx.bmp";
 * - 'o' - создание имени формата "outputxx.bmp";
 * \param int Num - Номер файла.
 * \param char flag - символ определяющий режим работы функции.
 * \return Функция возвращает ссылку на файл;
 */
FILE* FileNameGenerator(int Num, char flag);

/**
 * \brief Ввод изображений.
 * \details Функция побитово считывает изображения изображения из файлов "inputxx.bmp" и
 * записывает в структуру с результатами ссылку на массив с изображениями.
 *  * Требования и органичения:
 * - Разрешение изображений не превышает 1000 на 1000 пикселей;
 * - Количество файлов не более 100
 * \param InputResult* out - указатель на структуру с результатами вывода,
 *  в которую и будет сохраняться ссылка на изображения.
 * \return void.
 */
void InputPictures(InputResult* out);

/**
 * \brief Вывод изображений.
 * \details Функция побитово выводит изображения из массива в файлы "outputxx.bmp".
 * \param int PicCount - Количество изображений, которые необходимо вывести.
 * \param Pic* ptr_Pics - Массив изображений.
 * \return void.
 */
void OutputFunc(int PicCount, Pic* ptr_Pics);

/**
 * \brief Полная процедура ввода данных.
 * \details Функция введена для удобства и объединяет в себе функции ввода команд и изображений.
 * \details Функция создаёт, заполняет и выводит переменную типа InputResult
 * \return InputResult temp - структура содержащая результаты ввода данных.
 */
InputResult FullInputFunc();


